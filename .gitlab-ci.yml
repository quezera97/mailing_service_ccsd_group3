
services:
  - name: docker:20.10-dind
    alias: docker

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  APP_ENV: 'local'
  APP_URL: http://127.0.0.1:8000
  DASHBOARD_URL: http://127.0.0.1:80
  DB_CONNECTION: 'mysql'
  DB_HOST: 'database'
  DB_PORT: '3306'
  DB_DATABASE: 'mailing_service'
  MAIL_MAILER: 'smtp'
  MAIL_FROM_NAME: 'Mailing_Service'

stages:
  - build
  - test

before_script:
  # Update package lists and install dependencies
  - apt-get update
  - apt-get install -y wget gnupg libpng-dev libjpeg-dev libfreetype6-dev libxml2-dev libonig-dev libicu-dev libxslt-dev zlib1g-dev libzip-dev unzip

  # Install Docker CLI
  - curl -fsSL https://get.docker.com | sh

  # Install Docker Compose
  - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  - docker --version # Verify Docker installation
  - docker-compose --version # Verify Docker Compose installation

  # Install Google Chrome dependencies and Chrome
  - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
  - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
  - apt-get update
  - apt-get install -y google-chrome-stable
  - google-chrome --version # Verify Chrome installation

build:
  stage: build
  script:
    # Build and start services with Docker Compose
    - docker compose up -d --build
    # Wait for services to start up before running tests
    - sleep 60

test:
  stage: test
  image: selenium/node-chrome-debug:latest
  script:
    # Install Python dependencies inside the Docker container
    - apt-get update
    - apt-get install -y python3-venv python3-pip
    # Set up Python virtual environment and activate it
    - python3 -m venv myenv
    - source myenv/bin/activate
    - pip install selenium pytest
    # Run Selenium tests using the virtual environment
    - python3 test_sendemail.py

  after_script:
    - docker compose down



